apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-rabbitmq-testing
  labels:
    app: golang-rabbitmq-testing
  namespace: default
  #namespace: rabbitmq-testing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: golang-rabbitmq-testing
  template:
    metadata:
      labels:
        app: golang-rabbitmq-testing
        #sidecar.istio.io/inject: "true"
    spec:
      initContainers:
      - name: init
        image: google/cloud-sdk:alpine
        command:
        - /bin/sh
        - -c
        - |
          echo -n "POD_ZONE=" > /etc/envoy/zone/env && curl -s http://metadata.google.internal/computeMetadata/v1/instance/zone -H "Metadata-Flavor: Google" | cut -d '/' -f 4 >> /etc/envoy/zone/env && cat /etc/envoy/zone/env
        volumeMounts:
          - name: envz
            mountPath: /etc/envoy/zone
      containers:
      - name: golang-rabbitmq-testing
        image: autosetup/golang-rabbitmq-examples:0.0.9
        command:
          - /bin/sh
          - -c
        args:
          - >
            sleep 10 &&
            /usr/local/bin/publisher &&
            /usr/local/bin/consumer
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        env:
        - name: RABBITMQ_DSN
          value: amqp://guest:guest@localhost:5672
      - name: envoy-proxy
        image: envoyproxy/envoy:v1.24.7

        command:
          - /bin/sh
          - -c
        args:
          - >
            export $(cat /etc/envoy/zone/env | xargs) &&
            exec envoy -c /etc/envoy/envoy.yaml  --restart-epoch 0 --drain-time-s 45 --drain-strategy immediate --service-zone $POD_ZONE
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        ports:
          - name: tcp-amqp
            containerPort: 5672
            protocol: TCP
          - name: http-amqp
            containerPort: 9901
            protocol: TCP
        volumeMounts:
          - name: sidecar-config
            mountPath: "/etc/envoy"
            readOnly: true
          - name: envz
            mountPath: /etc/envoy/zone
            readOnly: true
      volumes:
        - name: sidecar-config
          configMap:
            name: sidecar-test-configmap
        - name: envz
          emptyDir: {}
      # tolerations:
      # - effect: NoExecute
      #   key: dedicated
      #   operator: Equal
      #   value: rabbitmq-testing
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - us-central1-c

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sidecar-test-configmap
  labels:
    app: sidecar-test
  namespace: default
data:
  envoy.yaml: |
    # Envoy Rabbitmq sidecar configuration.
    node:
      cluster: global
      id: global
      # locality:
      #   zone: 

    cluster_manager:
      local_cluster_name: local_cluster

    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 5672
          filter_chains:
            - filters:
                - name: envoy.filters.network.tcp_proxy
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                    stat_prefix: ampq
                    cluster: cluster_0
      clusters:
        - name: local_cluster
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          ignore_health_on_host_removal: "true"
          use_tcp_for_dns_lookups: "true"
          outlierDetection:
            consecutive_gateway_failure: 5
            interval: 5s
            base_ejection_time: 30s
            max_ejection_percent: 20
          dns_resolvers:
          - socket_address:
              address: "127.0.0.1"
              port_value: 8600
          upstream_connection_options:
            tcp_keepalive: {}
          load_assignment:
            cluster_name: local_cluster
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.16.18.6
                      port_value: 5672
              locality:
                zone: 'us-central1-a'
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.16.17.4
                      port_value: 5672
              locality:
                zone: 'us-central1-c'
        - name: cluster_0
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          ignore_health_on_host_removal: "true"
          use_tcp_for_dns_lookups: "true"
          common_lb_config:
            zone_aware_lb_config:
              min_cluster_size: 2
          dns_resolvers:
          - socket_address:
              address: "127.0.0.1"
              port_value: 8600
          upstream_connection_options:
            tcp_keepalive: {}
          load_assignment:
            cluster_name: cluster_0
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.16.18.6
                      port_value: 5672
              locality:
                zone: 'us-central1-a'
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 10.16.17.4
                      port_value: 5672
              locality:
                zone: 'us-central1-c'

    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901